/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if (l1 == NULL && l2 == NULL)
        return NULL;

        if (l1 == NULL && l2 != NULL)
        return l2;

        if (l1 != NULL && l2 == NULL)
        return l1;

        ListNode* n1 = new ListNode();
        ListNode* pt = n1;
        int carry = 0;

        while (l1 != NULL || l2 != NULL || carry)
        {
            int sum = 0;
            int v1 = 0;
            int v2 = 0;

            if (l1 != NULL)
            {
                v1 = l1->val;
                l1 = l1->next;
            }

            if (l2 != NULL)
            {
                v2 = l2->val;
                l2 = l2->next;
            }

            sum = v1 + v2 + carry;
            carry = sum / 10;
            
            ListNode* n2 = new ListNode(sum%10);
            pt->next = n2;
            pt = pt->next;
        }
        return n1->next;
    }
};
