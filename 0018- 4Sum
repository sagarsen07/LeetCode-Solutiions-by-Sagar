class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end());
        vector<vector<int>> ans;
        if(nums.size() < 4)
        return ans;

        for (int i = 0 ; i < nums.size()-3 ; i++){
            for (int j = i + 1 ; j < nums.size()-1 ; j++){
                int f = j+1, b = nums.size()-1;
                while(f < b){
                    long long temp =  (long long)nums[i] + (long long)nums[j] + (long long)nums[f] + (long long)nums[b];
                    if (temp == target){
                        vector<int> a = {nums[i], nums[j], nums[f], nums[b]};
                        ans.push_back(a);
                        int x = nums[f], y = nums[b];
                        while(f<b && nums[f] == x) f++;
                        while(f<b && nums[b] == y) b--;
                    }
                    else if (temp < target){
                        f++;
                    }
                    else if (temp > target){
                        b--;
                    }
                }
                while(j+1 < nums.size() && nums[j] == nums[j+1]) j++;
            }
            while(i+1 < nums.size() && nums[i] == nums[i+1]) i++;
        }
        return ans;
    }
};
